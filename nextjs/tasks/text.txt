1. routing
2. pre-rendering
3. client side rendering
4. api routes
5. style
6. Misc section
7. Authentication(client-side, server-side, api route)

whenever we want to pre-render we need to use getStaticPath function

ssg is built the html in build time
ssr is built the html in request time

for data fatching nextjs create react hook library in the behind the scense called swr

getStaticPaths because of dynamic page

the main problem is that ssg can't unpdate the data without rebuild

IRS strategy is suitable is perhaps a documentaion site or even e-commerce site

return {
  paths: path,
  fallback: false, //ssg. All the pages will be built in the build time
};

fallback: true, // ssr. if you provide true then pages generate in the background when any user request of the page for first time. fallback: "blocking" is similar to fallback true. But it doesn't need loading as far as I understand

possible use cases of ssr is a news listing page


api
in api folder if you make file like [...params].js we can catch all the route but if you delete the main file from api folder then we have use [[...params]] to catch the root route


we should not use in our own api in the getStaticProps and getServerSideProps

style (notun kisu sikhar nai)
==========
global // all the pages work like style.css, bootstrap etc
components styles // components level work like home.modules.css
sass or scss // ager motoy. i sass and connects
css in js solution // inline style and styled-components

next export is run without nodejs server and server static pages 

Authentication = identity. client, server-side Authentication and api routes Authentication
authorization = role